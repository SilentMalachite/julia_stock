name: CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.9'
          - '1.10'
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        exclude:
          # Windows with Julia 1.10 can be flaky
          - os: windows-latest
            version: '1.10'
    steps:
      - uses: actions/checkout@v4
      
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          
      - uses: julia-actions/cache@v1
      
      - name: Install dependencies
        run: |
          julia --project=. -e "using Pkg; Pkg.instantiate()"
          
      - name: Create test data directory
        run: mkdir -p data
          
      - name: Run tests
        run: |
          julia --project=. test/runtests.jl
        env:
          JULIA_NUM_THREADS: 2
          
      - uses: julia-actions/julia-processcoverage@v1
      
      - uses: codecov/codecov-action@v3
        with:
          files: lcov.info

  security:
    name: Security Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1.10'
          
      - name: Install dependencies
        run: |
          julia --project=. -e "using Pkg; Pkg.instantiate()"
          
      - name: Create test data directory
        run: mkdir -p data
          
      - name: Run security tests
        run: |
          julia --project=. test/test_security.jl

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1.10'
          
      - name: Install dependencies
        run: |
          julia --project=. -e "using Pkg; Pkg.instantiate()"
          
      - name: Create test data directory
        run: mkdir -p data
          
      - name: Run integration tests
        run: |
          julia --project=. test/test_integration.jl
        env:
          JULIA_NUM_THREADS: 4

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: julia-stock:latest