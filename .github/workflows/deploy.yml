name: Deploy

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'

jobs:
  docker-build-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: env.DOCKER_USERNAME != '' && env.DOCKER_PASSWORD != ''
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ env.DOCKER_USERNAME != '' && env.DOCKER_PASSWORD != '' }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/julia-stock:latest
            ${{ secrets.DOCKER_USERNAME }}/julia-stock:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
        if: env.DOCKER_USERNAME != '' && env.DOCKER_PASSWORD != ''
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1.10'
          
      - name: Install dependencies
        run: |
          julia --project=. -e "using Pkg; Pkg.instantiate()"
          
      - name: Build artifacts
        run: |
          mkdir -p artifacts
          # Create deployment package
          tar -czf artifacts/julia-stock-${{ github.ref_name }}.tar.gz \
            src/ scripts/ Project.toml Manifest.toml README.md LICENSE
            
      - name: Generate changelog
        run: |
          echo "# Release ${{ github.ref_name }}" > RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "## Changes" >> RELEASE_NOTES.md
          git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> RELEASE_NOTES.md || echo "Initial release" >> RELEASE_NOTES.md
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}